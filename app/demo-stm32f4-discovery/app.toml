name = "demo-stm32f4-discovery"
target = "thumbv7em-none-eabihf"
board = "stm32f4-discovery"
stacksize = 1024

[kernel]
path = "."
name = "demo-stm32f4-discovery"
requires = {flash = 65536, ram = 4096}
#
# For the kernel (and for any task that logs), we are required to enable
# either "itm" (denoting logging/panicking via ARM's Instrumentation Trace
# Macrocell) or "semihosting" (denoting logging/panicking via ARM
# semihosting).  We are biased to ITM because semihosting is excruciatingly
# slow (it is breakpoint based) and has an undesirable failure mode if logging
# output is generated and debugger is not attached (namely, the target stops).
# If one does choose to change this to semihosting for purposes of
# development, be sure to also change it in every task of interest.
#
features = ["itm", "stm32f4"]

[supervisor]
notification = 1

[outputs.flash]
address = 0x08000000
size = 262144
read = true
execute = true

[outputs.ram]
address = 0x20000000
size = 114688
read = true
write = true
execute = true

[tasks.jefe]
path = "../../task/jefe"
name = "task-jefe"
priority = 0
requires = {flash = 32768, ram = 2048}
start = true
features = ["itm"]
stacksize = 1536

[tasks.rcc_driver]
path = "../../drv/stm32fx-rcc"
name = "drv-stm32fx-rcc"
features = ["f4"]
priority = 1
requires = {flash = 8192, ram = 1024}
uses = ["rcc"]
start = true

[tasks.gpio_driver]
path = "../../drv/stm32fx-gpio"
name = "drv-stm32fx-gpio"
features = ["f411"]
priority = 2
requires = {flash = 8192, ram = 1024}
uses = ["gpiob", "gpioc", "gpiod"] # TODO: gpioa used by usart
start = true
task-slots = ["rcc_driver"]

[tasks.usart_driver]
path = "../../drv/stm32fx-usart"
name = "drv-stm32fx-usart"
features = ["stm32f4"]
priority = 2
requires = {flash = 16384, ram = 1024}
uses = ["usart2", "gpioa"]
start = true
interrupts = {38 = 1}
task-slots = ["rcc_driver"]

#[tasks.user_leds]
#path = "../../drv/user-leds"
#name = "drv-user-leds"
#features = ["stm32f4-gpio"]
#priority = 2
#requires = {flash = 8192, ram = 1024}
#uses = ["gpiod"]
#start = true
#task-slots = ["gpio_driver"]

#[tasks.ping]
#path = "../../task/ping"
#name = "task-ping"
#features = ["uart"]
#priority = 4
#requires = {flash = 8192, ram = 512}
#stacksize = 512
#start = true
#task-slots = [{peer = "pong"}, "usart_driver"]

#[tasks.pong]
#path = "../../task/pong"
#name = "task-pong"
#priority = 3
#requires = {flash = 8192, ram = 512}
#start = true
#stacksize = 512
#task-slots = ["user_leds"]
#
[tasks.hiffy]
path = "../../task/hiffy"
name = "task-hiffy"
priority = 3
requires = {flash = 16384, ram = 16384 }
stacksize = 2048
start = true

[tasks.piezo_element]
path = "../../drv/piezo-element"
name = "drv-piezo-element"
features = ["stm32f4-gpio"]
priority = 3
requires = {flash = 8192, ram = 512}
start = true
stacksize = 512
uses = ["tim3"]
task-slots = ["gpio_driver", "rcc_driver"]

[tasks.jukebox]
path = "../../task/jukebox"
name = "task-jukebox"
priority = 4
requires = {flash = 8192, ram = 2048 }
stacksize = 2048
start = true
task-slots = ["piezo_element"]

[tasks.spi2_driver]
path = "../../drv/stm32fx-spi-server"
name = "drv-stm32fx-spi-server"
priority = 10
requires = {flash = 16384, ram = 4096}
features = ["f411", "spi2"]
uses = ["spi2"]
start = true
#interrupts = {36 = 1}
stacksize = 1024
task-slots = ["gpio_driver", "rcc_driver"]

[tasks.w5100_driver]
path = "../../drv/w5100-spi"
name = "drv-w5100-spi"
priority = 11
requires = {flash = 32768, ram = 4096}
start = true
stacksize = 1024
task-slots = ["spi2_driver"]

#[tasks.w5100_echo]
#path = "../../task/w5100-echo"
#name = "task-w5100-echo"
#priority = 12
#requires = {flash=16384, ram=2048}
#start = true
#stacksize = 2048
#task-slots = ["w5100_driver"]

[tasks.jukebox_tcp]
path = "../../task/jukebox-tcp"
name = "task-jukebox-tcp"
priority = 12
requires = {flash=32768, ram=2048}
start = true
stacksize = 2048
task-slots = ["w5100_driver", "jukebox"]

[tasks.idle]
path = "../../task/idle"
name = "task-idle"
priority = 200
requires = {flash = 256, ram = 256}
stacksize = 256
start = true

[peripherals.usart2]
address = 0x40004400
size = 1024

[peripherals.rcc]
address = 0x40023800
size = 1024

[peripherals.gpioa]
address = 0x40020000
size = 1024

[peripherals.gpiob]
address = 0x40020400
size = 1024

[peripherals.gpioc]
address = 0x40020800
size = 1024

[peripherals.gpiod]
address = 0x40020c00
size = 1024

[peripherals.tim3]
address = 0x40000400
size = 1024

[peripherals.spi2]
address = 0x40003800
size = 1024
